name: Release with Artifacts

on:
  release:
    types: [created] # Triggers when a new release is created

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Move
        run: |
          ls -lhAR target
          mv -v target/mkudfimg*.jar bin/mkudfimg.jar
          ls -lhAR bin

      - name: Create tar.gz of bin files
        run: |
          tar -czvf bin_artifacts.tar.gz bin/*.sh bin/*.jar bin/*.cmd
          echo "ARTIFACT_PATH=bin_artifacts.tar.gz" >> $GITHUB_ENV

      - name: Get Release Upload URL
        id: get_release
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}")
          upload_url=$(echo "$response" | jq -r '.upload_url' | sed 's/{.*}//')
          echo "upload_url=$upload_url{?name,label}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATH }}
          asset_name: bin.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      # - name: Upload JAR to Release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # From create-release step
      #     asset_path: ${{ env.ARTIFACT_PATH }} # Path to JAR
